# This workflow uses actions that are not certified by GitHub.
# They are provided by a third-party and are governed by
# separate terms of service, privacy policy, and support
# documentation.

# Sample workflow for building and deploying a Jekyll site to GitHub Pages
name: Prepare for Deploy

on:
  # Runs on pushes targeting the default branch
  push:
    branches: ["**"]

  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: write
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
      - name: Setup Ruby
        uses: ruby/setup-ruby@55283cc23133118229fd3f97f9336ee23a179fcf # v1.146.0
        with:
          bundler-cache: true # runs 'bundle install' and caches installed gems automatically
          cache-version: 0 # Increment this number if you need to re-download cached gems
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v3
      - name: Extract Branch Name
        shell: bash
        run: echo "branch_name=${GITHUB_HEAD_REF:-${GITHUB_REF#refs/heads/}}" >> $GITHUB_OUTPUT
        id: branch
      - name: Build with Jekyll
        # Outputs to the './_site' directory by default
        run: |
          bundle exec jekyll build --baseurl "${{ steps.pages.outputs.base_path }}/${{ steps.branch.outputs.branch_name }}/"
          echo "${{ steps.pages.outputs.base_path }}/${{ steps.branch.outputs.branch_name }}/"
        env:
          JEKYLL_ENV: production
      
      - name: Save Build Folder
        run: mv ./_site ../${{ steps.branch.outputs.branch_name }}
      - name: Checkout Deployment
        uses: actions/checkout@v4
        with:
          ref: deployment
      - name: Clean Build and Move Build to Deployment
        run: |
          rm -rf ./${{ steps.branch.outputs.branch_name }} 
          mv ../${{ steps.branch.outputs.branch_name }} ./${{ steps.branch.outputs.branch_name }}
      - name: Push to Deployment
        run: |
          git config user.name github-actions
          git config user.email github-actions@github.com
          git add .
          git commit -m "Updated ${{ steps.branch.outputs.branch_name }}"
          git push
